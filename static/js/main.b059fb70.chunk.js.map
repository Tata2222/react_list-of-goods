{"version":3,"sources":["components/GoodsList.js","App.js","index.js"],"names":["GoodsList","state","maxWordLength","goods","props","listReverse","setState","prevState","reverse","sortByAlphabets","sort","resetOrder","sortByLength","a","b","length","selectLength","e","target","value","this","className","type","onClick","onChange","Array","fill","map","number","index","filter","word","item","key","React","Component","goodsFromServer","App","isVisible","slice","ReactDOM","render","document","getElementById"],"mappings":"4OAiFeA,E,4MA7EbC,MAAQ,CACNC,cAAe,GACfC,MAAO,EAAKC,MAAMD,O,EAGpBE,YAAc,WACZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,MAAO,YAAII,EAAUJ,OAAOK,e,EAIhCC,gBAAkB,WAChB,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,MAAO,YAAII,EAAUJ,OAAOO,Y,EAIhCC,WAAa,WACX,EAAKL,SAAS,CACZH,MAAM,YAAK,EAAKC,MAAMD,OACtBD,cAAe,M,EAInBU,aAAe,WACb,EAAKN,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,MAAO,YAAII,EAAUJ,OAAOO,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,e,EAI5DC,aAAe,SAACC,GACd,EAAKX,SAAS,CAAEJ,cAAee,EAAEC,OAAOC,S,uDAGhC,IACAjB,EAAkBkB,KAAKnB,MAAvBC,cAER,OACE,oCACE,yBAAKmB,UAAU,gBACb,4BAAQC,KAAK,SAASC,QAASH,KAAKf,aAApC,WAGA,4BAAQiB,KAAK,SAASC,QAASH,KAAKX,iBAApC,OAGA,4BAAQa,KAAK,SAASC,QAASH,KAAKT,YAApC,SAGA,4BAAQW,KAAK,SAASC,QAASH,KAAKR,cAApC,kBAGA,4BACEO,MAAOC,KAAKnB,MAAMC,cAClBsB,SAAUJ,KAAKJ,aACfK,UAAU,cAETI,MAAM,IAAIC,KAAK,IAAIC,KAAI,SAACC,EAAQC,GAAT,OACtB,4BAAQV,MAAOU,EAAQ,GAAIA,EAAQ,QAIzC,6BACE,4BACGT,KAAKnB,MAAME,MAAM2B,QAAO,SAAAC,GAAI,OAAIA,EAAKhB,QAAUb,KAC7CyB,KAAI,SAAAK,GAAI,OAAI,wBAAIC,IAAKD,GAAOA,a,GAlEnBE,IAAMC,WCCxBC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA+BaC,E,4MA3BbpC,MAAQ,CACNqC,WAAW,G,uDAGH,IAAD,OACDnC,EAAQiC,EAAgBG,QAE9B,OACE,yBAAKlB,UAAU,OACZD,KAAKnB,MAAMqC,UACR,kBAAC,EAAD,CAAWnC,MAAOA,IAElB,4BACEmB,KAAK,SACLC,QAAS,kBAAM,EAAKjB,UAAS,SAAAL,GAAK,MAAK,CACrCqC,WAAW,QAHf,c,GAbMJ,IAAMC,WCbxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b059fb70.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass GoodsList extends React.Component {\n  state = {\n    maxWordLength: 10,\n    goods: this.props.goods,\n  }\n\n  listReverse = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  sortByAlphabets = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort(),\n    }));\n  }\n\n  resetOrder = () => {\n    this.setState({\n      goods: [...this.props.goods],\n      maxWordLength: 10,\n    });\n  }\n\n  sortByLength = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  selectLength = (e) => {\n    this.setState({ maxWordLength: e.target.value });\n  }\n\n  render() {\n    const { maxWordLength } = this.state;\n\n    return (\n      <>\n        <div className=\"button-panel\">\n          <button type=\"button\" onClick={this.listReverse}>\n            Reverse\n          </button>\n          <button type=\"button\" onClick={this.sortByAlphabets}>\n            A-Z\n          </button>\n          <button type=\"button\" onClick={this.resetOrder}>\n            Reset\n          </button>\n          <button type=\"button\" onClick={this.sortByLength}>\n            Sort by length\n          </button>\n          <select\n            value={this.state.maxWordLength}\n            onChange={this.selectLength}\n            className=\"select-btn\"\n          >\n            {Array(10).fill('').map((number, index) => (\n              <option value={index + 1}>{index + 1}</option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <ul>\n            {this.state.goods.filter(word => word.length <= maxWordLength)\n              .map(item => <li key={item}>{item}</li>)}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default GoodsList;\n","import React from 'react';\nimport './App.css';\nimport GoodsList from './components/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isVisible: false,\n  }\n\n  render() {\n    const goods = goodsFromServer.slice();\n\n    return (\n      <div className=\"app\">\n        {this.state.isVisible\n          ? <GoodsList goods={goods} />\n          : (\n            <button\n              type=\"button\"\n              onClick={() => this.setState(state => ({\n                isVisible: true,\n              }))}\n            >\n              Start\n            </button>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}